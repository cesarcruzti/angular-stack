version: '3.8'

services:
  rethinkdb:
    image: rethinkdb:latest
    container_name: rethinkdb
    ports:
      - "8280:8080"
      - "28015:28015"
      - "29015:29015"
    command: ["rethinkdb", "--initial-password", "${RETHINKDB_ADMIN_PASSWORD}"]
    environment:
      RETHINKDB_ADMIN_PASSWORD: "rethinkdb"
    volumes:
      - rethinkdb_data:/data
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - default

  bff:
    build:
      context: ../../bff
      dockerfile: Dockerfile
    container_name: bff
    ports:
      - "3000:3000"
    depends_on:
      rethinkdb:
        condition: service_healthy
    environment:
      - PORT=3000
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=bff-client
      - KAFKA_CONSUMER_GROUP=bff-consumer-group
      - COMMAND_TOPIC=asset.management.consumer.paper.valuation.command
      - RESPONSE_TOPIC=asset.management.producer.paper.valuation.response
      - SCHEMA_REGISTRY=http://schema-registry:8081
      - DB_HOST=rethinkdb
      - DB_PORT=28015
      - DB_NAME=bff
      - DB_PASSWORD=rethinkdb
    restart: always
    networks:
      - default
      - default_network

  frontend:
    container_name: frontend
    build:
      context: ../..  # O contexto Ã© a raiz do projeto angular-stack
      dockerfile: Dockerfile # O Dockerfile que criamos na raiz
    ports:
      - "4200:80"
    depends_on:
      - bff
    networks:
      - default # Para falar com o bff
      - default_network # Para falar com keycloak e asset-management-api

volumes:
  rethinkdb_data:

networks:
  default:
    driver: bridge
  default_network:
    name: default_default
    external: true